{"ast":null,"code":"var _jsxFileName = \"/Users/claudiaemmanuel/sei/coding-projects/fullstack-mingle-app/client/src/components/posts/Posts.jsx\",\n  _s = $RefreshSig$();\nimport Post from \"../post/Post\";\nimport \"./posts.scss\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { makeRequest } from \"../../axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = () => {\n  _s();\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery([\"posts\"], async () => {\n    try {\n      const response = await makeRequest.get(\"/posts\");\n      return response.data;\n    } catch (error) {\n      console.error('Error in useQuery:', error);\n      throw error; // Rethrow the error to be caught by the error handling in useQuery\n    }\n  });\n\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts\",\n    children: error ? \"something went wrong\" : isLoading ? \"loading\" : data.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      post: post\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 6\n  }, this);\n};\n_s(Posts, \"P7jBIA24rc00P7RvfXjpVl6dqRI=\", false, function () {\n  return [useQuery];\n});\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["Post","useQuery","makeRequest","jsxDEV","_jsxDEV","Posts","_s","isLoading","error","data","response","get","console","log","className","children","map","post","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/claudiaemmanuel/sei/coding-projects/fullstack-mingle-app/client/src/components/posts/Posts.jsx"],"sourcesContent":["import Post from \"../post/Post\";\nimport \"./posts.scss\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { makeRequest } from \"../../axios\";\n\nconst Posts = () => {\n    const { isLoading, error, data } = useQuery([\"posts\"], async () => {\n        try {\n          const response = await makeRequest.get(\"/posts\");\n          return response.data;\n        } catch (error) {\n          console.error('Error in useQuery:', error);\n          throw error; // Rethrow the error to be caught by the error handling in useQuery\n        }\n      });\n      \n\n\n  console.log(data);\n\n\n  return (\n     <div className=\"posts\">\n     {error\n     ? \"something went wrong\" \n     : isLoading \n     ? \"loading\" \n     : data.map(post=>(\n        <Post post={post} key={post.id}/>\n     ))}\n    </div>\n  );\n};\n\nexport default Posts;"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,cAAc;AAC/B,OAAO,cAAc;AACrB,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM;IAAEC,SAAS;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGR,QAAQ,CAAC,CAAC,OAAO,CAAC,EAAE,YAAY;IAC/D,IAAI;MACF,MAAMS,QAAQ,GAAG,MAAMR,WAAW,CAACS,GAAG,CAAC,QAAQ,CAAC;MAChD,OAAOD,QAAQ,CAACD,IAAI;IACtB,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdI,OAAO,CAACJ,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1C,MAAMA,KAAK,CAAC,CAAC;IACf;EACF,CAAC,CAAC;;EAINI,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;EAGjB,oBACGL,OAAA;IAAKU,SAAS,EAAC,OAAO;IAAAC,QAAA,EACrBP,KAAK,GACJ,sBAAsB,GACtBD,SAAS,GACT,SAAS,GACTE,IAAI,CAACO,GAAG,CAACC,IAAI,iBACZb,OAAA,CAACJ,IAAI;MAACiB,IAAI,EAAEA;IAAK,GAAMA,IAAI,CAACC,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAChC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAEV,CAAC;AAAChB,EAAA,CA3BID,KAAK;EAAA,QAC4BJ,QAAQ;AAAA;AAAAsB,EAAA,GADzClB,KAAK;AA6BX,eAAeA,KAAK;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}