{"ast":null,"code":"// import \"./update.scss\";\n// import { useState } from \"react\";\n// import { makeRequest } from \"../../axios\";\n// import { useMutation, useQueryClient } from \"@tanstack/react-query\";\n\n// const Update = ({ setOpenUpdate, user }) => {\n\n//     const [cover, setCover] = useState(null);\n//     const [profile, setProfile] = useState(null);\n//     const [texts, setTexts] = useState({\n//         name: \"\",\n//         city: \"\",\n//         website: \"\",\n\n//     });\n\n//     const upload = async (file) => {\n//         console.log(file)\n//         try {\n//             const formData = new FormData();\n//             formData.append(\"file\", file);\n//             const res = await makeRequest.post(\"/upload\", formData);\n//             return res.data;\n//         } catch (err) {\n//             console.log(err);\n//         }\n//     };\n\n//     const handleChange = (e) => {\n//         setTexts((prev) => ({ ...prev, [e.target.name]: [e.target.value] }));\n//     };\n\n//     const queryClient = useQueryClient();\n\n//     const mutation = useMutation(\n//         (user) => {\n//             return makeRequest.put(\"/users\", user);\n//         },\n//         {\n//             onSuccess: () => {\n//                 // Invalidate and refetch\n//                 queryClient.invalidateQueries([\"user\"]);\n//             },\n//         }\n//     );\n\n//     const handleClick = async (e) => {\n//         e.preventDefault();\n//         let coverUrl;\n//         let profileUrl;\n\n//         coverUrl = cover ? await upload(cover) : user.coverPic;\n//         profileUrl = profile ? await upload(profile) : user.profilePic;\n\n//         // mutation.mutate({ desc, img: imgUrl });\n//         // setDesc(\"\")\n//         // setFile(\"\")\n\n//         mutation.mutate({ ...texts, coverPic: coverUrl, profilePic: profileUrl });\n//         setOpenUpdate(false);\n//         // setCover(null);\n//         // setProfile(null);\n\n//         return (\n//             <div className=\"update\">\n//                 Update\n//                 <form>\n//                     <input type=\"file\" />\n//                     <input type=\"file\" />\n//                     <input type=\"text\" name=\"name\" onChange={handleChange} />\n//                     <input type=\"file\" name=\"city\" onChange={handleChange} />\n//                     <input type=\"file\" name=\"website\" onChange={handleChange} />\n//                     <button onClick={handleClick}>Update</button>\n//                 </form>\n//                 <button onClick={() => setOpenUpdate(false)}>X</button>\n//             </div>\n//         );\n//     };\n// }\n\n// export default Update;","map":{"version":3,"names":[],"sources":["/Users/claudiaemmanuel/sei/coding-projects/fullstack-mingle-app/client/src/components/update/Update.jsx"],"sourcesContent":["// import \"./update.scss\";\n// import { useState } from \"react\";\n// import { makeRequest } from \"../../axios\";\n// import { useMutation, useQueryClient } from \"@tanstack/react-query\";\n\n// const Update = ({ setOpenUpdate, user }) => {\n\n//     const [cover, setCover] = useState(null);\n//     const [profile, setProfile] = useState(null);\n//     const [texts, setTexts] = useState({\n//         name: \"\",\n//         city: \"\",\n//         website: \"\",\n\n//     });\n\n//     const upload = async (file) => {\n//         console.log(file)\n//         try {\n//             const formData = new FormData();\n//             formData.append(\"file\", file);\n//             const res = await makeRequest.post(\"/upload\", formData);\n//             return res.data;\n//         } catch (err) {\n//             console.log(err);\n//         }\n//     };\n\n//     const handleChange = (e) => {\n//         setTexts((prev) => ({ ...prev, [e.target.name]: [e.target.value] }));\n//     };\n\n//     const queryClient = useQueryClient();\n\n//     const mutation = useMutation(\n//         (user) => {\n//             return makeRequest.put(\"/users\", user);\n//         },\n//         {\n//             onSuccess: () => {\n//                 // Invalidate and refetch\n//                 queryClient.invalidateQueries([\"user\"]);\n//             },\n//         }\n//     );\n\n//     const handleClick = async (e) => {\n//         e.preventDefault();\n//         let coverUrl;\n//         let profileUrl;\n\n//         coverUrl = cover ? await upload(cover) : user.coverPic;\n//         profileUrl = profile ? await upload(profile) : user.profilePic;\n\n//         // mutation.mutate({ desc, img: imgUrl });\n//         // setDesc(\"\")\n//         // setFile(\"\")\n\n\n//         mutation.mutate({ ...texts, coverPic: coverUrl, profilePic: profileUrl });\n//         setOpenUpdate(false);\n//         // setCover(null);\n//         // setProfile(null);\n\n//         return (\n//             <div className=\"update\">\n//                 Update\n//                 <form>\n//                     <input type=\"file\" />\n//                     <input type=\"file\" />\n//                     <input type=\"text\" name=\"name\" onChange={handleChange} />\n//                     <input type=\"file\" name=\"city\" onChange={handleChange} />\n//                     <input type=\"file\" name=\"website\" onChange={handleChange} />\n//                     <button onClick={handleClick}>Update</button>\n//                 </form>\n//                 <button onClick={() => setOpenUpdate(false)}>X</button>\n//             </div>\n//         );\n//     };\n// }\n\n// export default Update;"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}